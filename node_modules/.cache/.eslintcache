[{"/home/eatmyunicorn/site/solana-react-quickstart/src/index.tsx":"1","/home/eatmyunicorn/site/solana-react-quickstart/src/reportWebVitals.ts":"2","/home/eatmyunicorn/site/solana-react-quickstart/src/App.tsx":"3","/home/eatmyunicorn/site/solana-react-quickstart/src/MyWallet.tsx":"4","/home/eatmyunicorn/site/solana-react-quickstart/src/components/navbar/navbar.js":"5","/home/eatmyunicorn/site/solana-react-quickstart/src/components/navbar/Drawer.js":"6","/home/eatmyunicorn/site/solana-react-quickstart/src/pages/navbar/About.js":"7","/home/eatmyunicorn/site/solana-react-quickstart/src/pages/navbar/Whitepaper.js":"8"},{"size":500,"mtime":1645153666358,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1645153666358,"results":"11","hashOfConfig":"10"},{"size":2367,"mtime":1645162582518,"results":"12","hashOfConfig":"10"},{"size":1066,"mtime":1645155655368,"results":"13","hashOfConfig":"10"},{"size":2021,"mtime":1645163977908,"results":"14","hashOfConfig":"10"},{"size":1667,"mtime":1645161675948,"results":"15","hashOfConfig":"10"},{"size":145,"mtime":1645159208328,"results":"16","hashOfConfig":"10"},{"size":155,"mtime":1645159183819,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1rmelye",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/eatmyunicorn/site/solana-react-quickstart/src/index.tsx",[],["40","41"],"/home/eatmyunicorn/site/solana-react-quickstart/src/reportWebVitals.ts",[],"/home/eatmyunicorn/site/solana-react-quickstart/src/App.tsx",["42","43","44","45","46","47","48","49","50","51","52","53"],"import React from \"react\";\nimport logo from \"./logo.png\";\nimport \"./App.css\";\nimport {\n  AppBar,\n  Toolbar,\n  CssBaseline,\n  Typography,\n  makeStyles,\n  useTheme,\n  useMediaQuery,\n} from \"@material-ui/core\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getLedgerWallet,\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletExtensionWallet,\n  getSolletWallet,\n  getTorusWallet,\n} from \"@solana/wallet-adapter-wallets\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport MyWallet from \"./MyWallet\";\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/navbar/navbar\";\nimport Home from \"./pages/navbar/About\";\nimport About from \"./pages/navbar/About\";\nimport WhitePaper from \"./pages/navbar/Whitepaper\";\n\nconst useStyles = makeStyles((theme) => ({\n  AppMain: {\n    height: \"93.3vh\",\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n\n  // Can be set to 'devnet', 'testnet', or 'mainnet-beta'\n  const network = WalletAdapterNetwork.Testnet;\n\n  // You can also provide a custom RPC endpoint\n  const endpoint = React.useMemo(() => clusterApiUrl(network), [network]);\n\n  // @solana/wallet-adapter-wallets includes all the adapters but supports tree shaking --\n  // Only the wallets you configure here will be compiled into your application\n  const wallets = React.useMemo(\n    () => [\n      getPhantomWallet(),\n      getSlopeWallet(),\n      getSolflareWallet(),\n      getLedgerWallet(),\n      getSolletWallet({ network }),\n      getSolletExtensionWallet({ network }),\n    ],\n    [network]\n  );\n\n\n\n// <MyWallet />\n  return (\n\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={wallets}>\n        <div className=\"App\">\n          <header className=\"App-header\"> \n          <Router>\n            <Navbar />\n            <Routes>\n              <Route path=\"/\" />\n              <Route path=\"/About\"  />\n              <Route path=\"/Whitepaper\" />\n            </Routes>\n          </Router> \n          <div className={classes.AppMain}>\n            {\n              // place app body here \n            }\n           \n\n\n\n          </div>   \n          </header>\n        </div>\n      </WalletProvider>\n    </ConnectionProvider>\n  );\n}\n\nexport default App;\n","/home/eatmyunicorn/site/solana-react-quickstart/src/MyWallet.tsx",["54","55","56","57"],"import React from 'react';\nimport {\n    useAnchorWallet,\n    useConnection,\n    useWallet,\n} from '@solana/wallet-adapter-react';\nimport {\n    WalletModalProvider,\n    WalletDisconnectButton,\n    WalletMultiButton,\n} from '@solana/wallet-adapter-react-ui';\n\nconst MyWallet: React.FC = () => {\n    const { connection } = useConnection();\n    let walletAddress = \"\";\n\n    // if you use anchor, use the anchor hook instead\n    // const wallet = useAnchorWallet();\n    // const walletAddress = wallet?.publicKey.toString();\n\n    const wallet = useWallet();\n    if (wallet.connected && wallet.publicKey) {\n        walletAddress = wallet.publicKey.toString()\n    }\n\n    return (\n        <>\n            {wallet.connected}\n            <div className=\"multi-wrapper\">\n                <span className=\"button-wrapper\">\n                    <WalletModalProvider>\n                        <WalletMultiButton />\n                    </WalletModalProvider>\n                </span>\n                {wallet.connected}\n            </div>\n        </>\n    );\n};\n\nexport default MyWallet;\n","/home/eatmyunicorn/site/solana-react-quickstart/src/components/navbar/navbar.js",[],"/home/eatmyunicorn/site/solana-react-quickstart/src/components/navbar/Drawer.js",["58"],"import React, { useState } from \"react\";\r\nimport {\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n makeStyles\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MyWallet from \"./../../MyWallet\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nconst useStyles = makeStyles(()=>({\r\n    link:{\r\n        textDecoration:\"none\",\r\n        color: \"blue\",\r\n        fontSize: \"20px\",\r\n    },\r\n    icon:{\r\n        color: \"white\"\r\n    }\r\n}));\r\n\r\nfunction DrawerComponent() {\r\nconst classes = useStyles();\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  return (\r\n    <>\r\n      <Drawer\r\n        open={openDrawer}\r\n        onClose={() => setOpenDrawer(false)}\r\n      >\r\n        <List>\r\n         <ListItem onClick={() => setOpenDrawer(false)}>\r\n            <ListItemText>\r\n              <Link to=\"/\">Home</Link>\r\n            </ListItemText>\r\n          </ListItem>\r\n          <ListItem onClick={() => setOpenDrawer(false)}>\r\n            <ListItemText>\r\n              <Link to=\"/about\">About</Link>\r\n            </ListItemText>\r\n          </ListItem>\r\n          <ListItem onClick={() => setOpenDrawer(false)}>\r\n            <ListItemText>\r\n              <Link to=\"/whitepaper\">WhitePaper</Link>\r\n            </ListItemText>\r\n          </ListItem>\r\n          <ListItem onClick={() => setOpenDrawer(true)}>\r\n            <ListItemText>\r\n              <Link to=\"#\"><MyWallet /></Link>\r\n            </ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <IconButton onClick={() => setOpenDrawer(!openDrawer)}>\r\n        <MenuIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n}\r\nexport default DrawerComponent;\r\n",["59","60"],"/home/eatmyunicorn/site/solana-react-quickstart/src/pages/navbar/About.js",[],["61","62"],"/home/eatmyunicorn/site/solana-react-quickstart/src/pages/navbar/Whitepaper.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":12},{"ruleId":"67","severity":1,"message":"71","line":5,"column":3,"nodeType":"69","messageId":"70","endLine":5,"endColumn":9},{"ruleId":"67","severity":1,"message":"72","line":6,"column":3,"nodeType":"69","messageId":"70","endLine":6,"endColumn":10},{"ruleId":"67","severity":1,"message":"73","line":7,"column":3,"nodeType":"69","messageId":"70","endLine":7,"endColumn":14},{"ruleId":"67","severity":1,"message":"74","line":8,"column":3,"nodeType":"69","messageId":"70","endLine":8,"endColumn":13},{"ruleId":"67","severity":1,"message":"75","line":10,"column":3,"nodeType":"69","messageId":"70","endLine":10,"endColumn":11},{"ruleId":"67","severity":1,"message":"76","line":11,"column":3,"nodeType":"69","messageId":"70","endLine":11,"endColumn":16},{"ruleId":"67","severity":1,"message":"77","line":26,"column":3,"nodeType":"69","messageId":"70","endLine":26,"endColumn":17},{"ruleId":"67","severity":1,"message":"78","line":29,"column":8,"nodeType":"69","messageId":"70","endLine":29,"endColumn":16},{"ruleId":"67","severity":1,"message":"79","line":33,"column":8,"nodeType":"69","messageId":"70","endLine":33,"endColumn":12},{"ruleId":"67","severity":1,"message":"80","line":34,"column":8,"nodeType":"69","messageId":"70","endLine":34,"endColumn":13},{"ruleId":"67","severity":1,"message":"81","line":35,"column":8,"nodeType":"69","messageId":"70","endLine":35,"endColumn":18},{"ruleId":"67","severity":1,"message":"82","line":3,"column":5,"nodeType":"69","messageId":"70","endLine":3,"endColumn":20},{"ruleId":"67","severity":1,"message":"83","line":9,"column":5,"nodeType":"69","messageId":"70","endLine":9,"endColumn":27},{"ruleId":"67","severity":1,"message":"84","line":14,"column":13,"nodeType":"69","messageId":"70","endLine":14,"endColumn":23},{"ruleId":"67","severity":1,"message":"85","line":23,"column":9,"nodeType":"69","messageId":"70","endLine":23,"endColumn":22},{"ruleId":"86","severity":1,"message":"87","line":25,"column":7,"nodeType":"69","messageId":"70","endLine":25,"endColumn":14},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"63","replacedBy":"88"},{"ruleId":"65","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'CssBaseline' is defined but never used.","'Typography' is defined but never used.","'useTheme' is defined but never used.","'useMediaQuery' is defined but never used.","'getTorusWallet' is defined but never used.","'MyWallet' is defined but never used.","'Home' is defined but never used.","'About' is defined but never used.","'WhitePaper' is defined but never used.","'useAnchorWallet' is defined but never used.","'WalletDisconnectButton' is defined but never used.","'connection' is assigned a value but never used.","'walletAddress' is assigned a value but never used.","no-unused-vars","'classes' is assigned a value but never used.",["90"],["91"],"no-global-assign","no-unsafe-negation"]