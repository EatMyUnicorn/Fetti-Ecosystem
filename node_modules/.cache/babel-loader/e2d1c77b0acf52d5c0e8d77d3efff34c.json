{"ast":null,"code":"var _jsxFileName = \"/home/eatmyunicorn/site/solana-react-quickstart/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./App.css\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { ConnectionProvider, WalletProvider } from \"@solana/wallet-adapter-react\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport { getLedgerWallet, getPhantomWallet, getSlopeWallet, getSolflareWallet, getSolletExtensionWallet, getSolletWallet } from \"@solana/wallet-adapter-wallets\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/navbar/navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  AppMain: {\n    height: \"93.3vh\"\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles(); // Can be set to 'devnet', 'testnet', or 'mainnet-beta'\n\n  const network = WalletAdapterNetwork.Testnet; // You can also provide a custom RPC endpoint\n\n  const endpoint = React.useMemo(() => clusterApiUrl(network), [network]); // @solana/wallet-adapter-wallets includes all the adapters but supports tree shaking --\n  // Only the wallets you configure here will be compiled into your application\n\n  const wallets = React.useMemo(() => [getPhantomWallet(), getSlopeWallet(), getSolflareWallet(), getLedgerWallet(), getSolletWallet({\n    network\n  }), getSolletExtensionWallet({\n    network\n  })], [network]); // <MyWallet />\n\n  return /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n    endpoint: endpoint,\n    children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n      wallets: wallets,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: [/*#__PURE__*/_jsxDEV(Router, {\n            children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Routes, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/About\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/Whitepaper\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.AppMain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FCRhEAkdy6kbQoiZQdt5jgGSXMI=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/eatmyunicorn/site/solana-react-quickstart/src/App.tsx"],"names":["React","makeStyles","ConnectionProvider","WalletProvider","WalletAdapterNetwork","getLedgerWallet","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletExtensionWallet","getSolletWallet","clusterApiUrl","BrowserRouter","Router","Routes","Route","Navbar","useStyles","theme","AppMain","height","App","classes","network","Testnet","endpoint","useMemo","wallets"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;AACA,SAKEC,UALF,QAQO,mBARP;AAUA,SACEC,kBADF,EAEEC,cAFF,QAGO,8BAHP;AAIA,SAASC,oBAAT,QAAqC,6BAArC;AACA,SACEC,eADF,EAEEC,gBAFF,EAGEC,cAHF,EAIEC,iBAJF,EAKEC,wBALF,EAMEC,eANF,QAQO,gCARP;AASA,SAASC,aAAT,QAA8B,iBAA9B;AAGA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAKA,MAAMC,SAAS,GAAGhB,UAAU,CAAEiB,KAAD,KAAY;AACvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AADD;AAD8B,CAAZ,CAAD,CAA5B;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,OAAO,GAAGL,SAAS,EAAzB,CADa,CAGb;;AACA,QAAMM,OAAO,GAAGnB,oBAAoB,CAACoB,OAArC,CAJa,CAMb;;AACA,QAAMC,QAAQ,GAAGzB,KAAK,CAAC0B,OAAN,CAAc,MAAMf,aAAa,CAACY,OAAD,CAAjC,EAA4C,CAACA,OAAD,CAA5C,CAAjB,CAPa,CASb;AACA;;AACA,QAAMI,OAAO,GAAG3B,KAAK,CAAC0B,OAAN,CACd,MAAM,CACJpB,gBAAgB,EADZ,EAEJC,cAAc,EAFV,EAGJC,iBAAiB,EAHb,EAIJH,eAAe,EAJX,EAKJK,eAAe,CAAC;AAAEa,IAAAA;AAAF,GAAD,CALX,EAMJd,wBAAwB,CAAC;AAAEc,IAAAA;AAAF,GAAD,CANpB,CADQ,EASd,CAACA,OAAD,CATc,CAAhB,CAXa,CAyBf;;AACE,sBAEE,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEE,QAA9B;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEE,OAAzB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAAA,kCACA,QAAC,MAAD;AAAA,oCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AAAA,sCACE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eASA;AAAK,YAAA,SAAS,EAAEL,OAAO,CAACH;AAAxB;AAAA;AAAA;AAAA;AAAA,kBATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AA4BD;;GAtDQE,G;UACSJ,S;;;KADTI,G;AAwDT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.png\";\nimport \"./App.css\";\nimport {\n  AppBar,\n  Toolbar,\n  CssBaseline,\n  Typography,\n  makeStyles,\n  useTheme,\n  useMediaQuery,\n} from \"@material-ui/core\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getLedgerWallet,\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletExtensionWallet,\n  getSolletWallet,\n  getTorusWallet,\n} from \"@solana/wallet-adapter-wallets\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport MyWallet from \"./MyWallet\";\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/navbar/navbar\";\nimport Home from \"./pages/navbar/About\";\nimport About from \"./pages/navbar/About\";\nimport WhitePaper from \"./pages/navbar/Whitepaper\";\n\nconst useStyles = makeStyles((theme) => ({\n  AppMain: {\n    height: \"93.3vh\",\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n\n  // Can be set to 'devnet', 'testnet', or 'mainnet-beta'\n  const network = WalletAdapterNetwork.Testnet;\n\n  // You can also provide a custom RPC endpoint\n  const endpoint = React.useMemo(() => clusterApiUrl(network), [network]);\n\n  // @solana/wallet-adapter-wallets includes all the adapters but supports tree shaking --\n  // Only the wallets you configure here will be compiled into your application\n  const wallets = React.useMemo(\n    () => [\n      getPhantomWallet(),\n      getSlopeWallet(),\n      getSolflareWallet(),\n      getLedgerWallet(),\n      getSolletWallet({ network }),\n      getSolletExtensionWallet({ network }),\n    ],\n    [network]\n  );\n\n\n\n// <MyWallet />\n  return (\n\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={wallets}>\n        <div className=\"App\">\n          <header className=\"App-header\"> \n          <Router>\n            <Navbar />\n            <Routes>\n              <Route path=\"/\" />\n              <Route path=\"/About\"  />\n              <Route path=\"/Whitepaper\" />\n            </Routes>\n          </Router> \n          <div className={classes.AppMain}>\n            {\n              // place app body here \n            }\n           \n\n\n\n          </div>   \n          </header>\n        </div>\n      </WalletProvider>\n    </ConnectionProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}