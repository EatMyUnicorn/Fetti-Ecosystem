{"ast":null,"code":"import React from\"react\";import\"./App.css\";import{makeStyles}from\"@material-ui/core\";import{ConnectionProvider,WalletProvider}from\"@solana/wallet-adapter-react\";import{WalletAdapterNetwork}from\"@solana/wallet-adapter-base\";import{getLedgerWallet,getPhantomWallet,getSlopeWallet,getSolflareWallet,getSolletExtensionWallet,getSolletWallet}from\"@solana/wallet-adapter-wallets\";import{clusterApiUrl}from\"@solana/web3.js\";import{BrowserRouter as Router,Routes,Route}from\"react-router-dom\";import Navbar from\"./components/navbar/navbar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{AppMain:{height:\"93.3vh\"}};});function App(){var classes=useStyles();// Can be set to 'devnet', 'testnet', or 'mainnet-beta'\nvar network=WalletAdapterNetwork.Testnet;// You can also provide a custom RPC endpoint\nvar endpoint=React.useMemo(function(){return clusterApiUrl(network);},[network]);// @solana/wallet-adapter-wallets includes all the adapters but supports tree shaking --\n// Only the wallets you configure here will be compiled into your application\nvar wallets=React.useMemo(function(){return[getPhantomWallet(),getSlopeWallet(),getSolflareWallet(),getLedgerWallet(),getSolletWallet({network:network}),getSolletExtensionWallet({network:network})];},[network]);// <MyWallet />\nreturn/*#__PURE__*/_jsx(ConnectionProvider,{endpoint:endpoint,children:/*#__PURE__*/_jsx(WalletProvider,{wallets:wallets,children:/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\"}),/*#__PURE__*/_jsx(Route,{path:\"/About\"}),/*#__PURE__*/_jsx(Route,{path:\"/Whitepaper\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.AppMain})]})})})});}export default App;","map":{"version":3,"sources":["/home/eatmyunicorn/site/solana-react-quickstart/src/App.tsx"],"names":["React","makeStyles","ConnectionProvider","WalletProvider","WalletAdapterNetwork","getLedgerWallet","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletExtensionWallet","getSolletWallet","clusterApiUrl","BrowserRouter","Router","Routes","Route","Navbar","useStyles","theme","AppMain","height","App","classes","network","Testnet","endpoint","useMemo","wallets"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,WAAP,CACA,OAKEC,UALF,KAQO,mBARP,CAUA,OACEC,kBADF,CAEEC,cAFF,KAGO,8BAHP,CAIA,OAASC,oBAAT,KAAqC,6BAArC,CACA,OACEC,eADF,CAEEC,gBAFF,CAGEC,cAHF,CAIEC,iBAJF,CAKEC,wBALF,CAMEC,eANF,KAQO,gCARP,CASA,OAASC,aAAT,KAA8B,iBAA9B,CAGA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,MAAlC,CAA0CC,KAA1C,KAAuD,kBAAvD,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,C,wFAKA,GAAMC,CAAAA,SAAS,CAAGhB,UAAU,CAAC,SAACiB,KAAD,QAAY,CACvCC,OAAO,CAAE,CACPC,MAAM,CAAE,QADD,CAD8B,CAAZ,EAAD,CAA5B,CAOA,QAASC,CAAAA,GAAT,EAAe,CACb,GAAMC,CAAAA,OAAO,CAAGL,SAAS,EAAzB,CAEA;AACA,GAAMM,CAAAA,OAAO,CAAGnB,oBAAoB,CAACoB,OAArC,CAEA;AACA,GAAMC,CAAAA,QAAQ,CAAGzB,KAAK,CAAC0B,OAAN,CAAc,iBAAMf,CAAAA,aAAa,CAACY,OAAD,CAAnB,EAAd,CAA4C,CAACA,OAAD,CAA5C,CAAjB,CAEA;AACA;AACA,GAAMI,CAAAA,OAAO,CAAG3B,KAAK,CAAC0B,OAAN,CACd,iBAAM,CACJpB,gBAAgB,EADZ,CAEJC,cAAc,EAFV,CAGJC,iBAAiB,EAHb,CAIJH,eAAe,EAJX,CAKJK,eAAe,CAAC,CAAEa,OAAO,CAAPA,OAAF,CAAD,CALX,CAMJd,wBAAwB,CAAC,CAAEc,OAAO,CAAPA,OAAF,CAAD,CANpB,CAAN,EADc,CASd,CAACA,OAAD,CATc,CAAhB,CAcF;AACE,mBAEE,KAAC,kBAAD,EAAoB,QAAQ,CAAEE,QAA9B,uBACE,KAAC,cAAD,EAAgB,OAAO,CAAEE,OAAzB,uBACE,YAAK,SAAS,CAAC,KAAf,uBACE,gBAAQ,SAAS,CAAC,YAAlB,wBACA,MAAC,MAAD,yBACE,KAAC,MAAD,IADF,cAEE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,EAFF,cAGE,KAAC,KAAD,EAAO,IAAI,CAAC,aAAZ,EAHF,GAFF,GADA,cASA,YAAK,SAAS,CAAEL,OAAO,CAACH,OAAxB,EATA,GADF,EADF,EADF,EAFF,CA4BD,CAED,cAAeE,CAAAA,GAAf","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.png\";\nimport \"./App.css\";\nimport {\n  AppBar,\n  Toolbar,\n  CssBaseline,\n  Typography,\n  makeStyles,\n  useTheme,\n  useMediaQuery,\n} from \"@material-ui/core\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getLedgerWallet,\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletExtensionWallet,\n  getSolletWallet,\n  getTorusWallet,\n} from \"@solana/wallet-adapter-wallets\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport MyWallet from \"./MyWallet\";\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/navbar/navbar\";\nimport Home from \"./pages/navbar/About\";\nimport About from \"./pages/navbar/About\";\nimport WhitePaper from \"./pages/navbar/Whitepaper\";\n\nconst useStyles = makeStyles((theme) => ({\n  AppMain: {\n    height: \"93.3vh\",\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n\n  // Can be set to 'devnet', 'testnet', or 'mainnet-beta'\n  const network = WalletAdapterNetwork.Testnet;\n\n  // You can also provide a custom RPC endpoint\n  const endpoint = React.useMemo(() => clusterApiUrl(network), [network]);\n\n  // @solana/wallet-adapter-wallets includes all the adapters but supports tree shaking --\n  // Only the wallets you configure here will be compiled into your application\n  const wallets = React.useMemo(\n    () => [\n      getPhantomWallet(),\n      getSlopeWallet(),\n      getSolflareWallet(),\n      getLedgerWallet(),\n      getSolletWallet({ network }),\n      getSolletExtensionWallet({ network }),\n    ],\n    [network]\n  );\n\n\n\n// <MyWallet />\n  return (\n\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={wallets}>\n        <div className=\"App\">\n          <header className=\"App-header\"> \n          <Router>\n            <Navbar />\n            <Routes>\n              <Route path=\"/\" />\n              <Route path=\"/About\"  />\n              <Route path=\"/Whitepaper\" />\n            </Routes>\n          </Router> \n          <div className={classes.AppMain}>\n            {\n              // place app body here \n            }\n           \n\n\n\n          </div>   \n          </header>\n        </div>\n      </WalletProvider>\n    </ConnectionProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}