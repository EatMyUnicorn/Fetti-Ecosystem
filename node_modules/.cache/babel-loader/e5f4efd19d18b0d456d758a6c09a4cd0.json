{"ast":null,"code":"var _jsxFileName = \"/home/eatmyunicorn/site/solana-react-quickstart/src/MyWallet.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider, WalletDisconnectButton, WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyWallet = () => {\n  _s();\n\n  const {\n    connection\n  } = useConnection();\n  let walletAddress = \"\"; // if you use anchor, use the anchor hook instead\n  // const wallet = useAnchorWallet();\n  // const walletAddress = wallet?.publicKey.toString();\n\n  const wallet = useWallet();\n\n  if (wallet.connected && wallet.publicKey) {\n    walletAddress = wallet.publicKey.toString();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [wallet.connected, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multi-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"button-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(WalletModalProvider, {\n          children: [/*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), wallet.connected && /*#__PURE__*/_jsxDEV(WalletDisconnectButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyWallet, \"hL6NYcRiqw723iT8fMaPriY44LQ=\", false, function () {\n  return [useConnection, useWallet];\n});\n\n_c = MyWallet;\nexport default MyWallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyWallet\");","map":{"version":3,"sources":["/home/eatmyunicorn/site/solana-react-quickstart/src/MyWallet.tsx"],"names":["React","useConnection","useWallet","WalletModalProvider","WalletDisconnectButton","WalletMultiButton","MyWallet","connection","walletAddress","wallet","connected","publicKey","toString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAEIC,aAFJ,EAGIC,SAHJ,QAIO,8BAJP;AAKA,SACIC,mBADJ,EAEIC,sBAFJ,EAGIC,iBAHJ,QAIO,iCAJP;;;;AAMA,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAiBN,aAAa,EAApC;AACA,MAAIO,aAAa,GAAG,EAApB,CAF6B,CAI7B;AACA;AACA;;AAEA,QAAMC,MAAM,GAAGP,SAAS,EAAxB;;AACA,MAAIO,MAAM,CAACC,SAAP,IAAoBD,MAAM,CAACE,SAA/B,EAA0C;AACtCH,IAAAA,aAAa,GAAGC,MAAM,CAACE,SAAP,CAAiBC,QAAjB,EAAhB;AACH;;AAED,sBACI;AAAA,eACKH,MAAM,CAACC,SADZ,eAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA,+BACI,QAAC,mBAAD;AAAA,kCACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKD,MAAM,CAACC,SAAP,iBAAoB,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA,kBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAcH,CA3BD;;GAAMJ,Q;UACqBL,a,EAORC,S;;;KARbI,Q;AA6BN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport {\n    useAnchorWallet,\n    useConnection,\n    useWallet,\n} from '@solana/wallet-adapter-react';\nimport {\n    WalletModalProvider,\n    WalletDisconnectButton,\n    WalletMultiButton,\n} from '@solana/wallet-adapter-react-ui';\n\nconst MyWallet: React.FC = () => {\n    const { connection } = useConnection();\n    let walletAddress = \"\";\n\n    // if you use anchor, use the anchor hook instead\n    // const wallet = useAnchorWallet();\n    // const walletAddress = wallet?.publicKey.toString();\n\n    const wallet = useWallet();\n    if (wallet.connected && wallet.publicKey) {\n        walletAddress = wallet.publicKey.toString()\n    }\n\n    return (\n        <>\n            {wallet.connected}\n            <div className=\"multi-wrapper\">\n                <span className=\"button-wrapper\">\n                    <WalletModalProvider>\n                        <WalletMultiButton />\n                        {wallet.connected && <WalletDisconnectButton />}\n                    </WalletModalProvider>\n                </span>\n                \n            </div>\n        </>\n    );\n};\n\nexport default MyWallet;\n"]},"metadata":{},"sourceType":"module"}